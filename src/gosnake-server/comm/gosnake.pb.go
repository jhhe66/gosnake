// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gosnake.proto

package comm // import "gosnake-server/comm"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Mode int32

const (
	Mode_Mode_None Mode = 0
	Mode_Mode_1P   Mode = 1
	Mode_Mode_2P   Mode = 2
	Mode_Mode_3P   Mode = 3
)

var Mode_name = map[int32]string{
	0: "Mode_None",
	1: "Mode_1P",
	2: "Mode_2P",
	3: "Mode_3P",
}
var Mode_value = map[string]int32{
	"Mode_None": 0,
	"Mode_1P":   1,
	"Mode_2P":   2,
	"Mode_3P":   3,
}

func (x Mode) String() string {
	return proto.EnumName(Mode_name, int32(x))
}
func (Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gosnake_200050d03267622b, []int{0}
}

type KeyCode int32

const (
	KeyCode_KeyCode_None  KeyCode = 0
	KeyCode_KeyCode_LEFT  KeyCode = -1
	KeyCode_KeyCode_UP    KeyCode = -20
	KeyCode_KeyCode_RIGHT KeyCode = 1
	KeyCode_KeyCode_DOWN  KeyCode = 20
)

var KeyCode_name = map[int32]string{
	0:   "KeyCode_None",
	-1:  "KeyCode_LEFT",
	-20: "KeyCode_UP",
	1:   "KeyCode_RIGHT",
	20:  "KeyCode_DOWN",
}
var KeyCode_value = map[string]int32{
	"KeyCode_None":  0,
	"KeyCode_LEFT":  -1,
	"KeyCode_UP":    -20,
	"KeyCode_RIGHT": 1,
	"KeyCode_DOWN":  20,
}

func (x KeyCode) String() string {
	return proto.EnumName(KeyCode_name, int32(x))
}
func (KeyCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_gosnake_200050d03267622b, []int{1}
}

type Up struct {
	// Types that are valid to be assigned to M:
	//	*Up_Join
	//	*Up_Op
	M                    isUp_M   `protobuf_oneof:"m"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Up) Reset()         { *m = Up{} }
func (m *Up) String() string { return proto.CompactTextString(m) }
func (*Up) ProtoMessage()    {}
func (*Up) Descriptor() ([]byte, []int) {
	return fileDescriptor_gosnake_200050d03267622b, []int{0}
}
func (m *Up) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Up.Unmarshal(m, b)
}
func (m *Up) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Up.Marshal(b, m, deterministic)
}
func (dst *Up) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Up.Merge(dst, src)
}
func (m *Up) XXX_Size() int {
	return xxx_messageInfo_Up.Size(m)
}
func (m *Up) XXX_DiscardUnknown() {
	xxx_messageInfo_Up.DiscardUnknown(m)
}

var xxx_messageInfo_Up proto.InternalMessageInfo

type isUp_M interface {
	isUp_M()
}

type Up_Join struct {
	Join *Up_UpJoin `protobuf:"bytes,1,opt,name=join,proto3,oneof"`
}

type Up_Op struct {
	Op *Up_UpOp `protobuf:"bytes,2,opt,name=op,proto3,oneof"`
}

func (*Up_Join) isUp_M() {}

func (*Up_Op) isUp_M() {}

func (m *Up) GetM() isUp_M {
	if m != nil {
		return m.M
	}
	return nil
}

func (m *Up) GetJoin() *Up_UpJoin {
	if x, ok := m.GetM().(*Up_Join); ok {
		return x.Join
	}
	return nil
}

func (m *Up) GetOp() *Up_UpOp {
	if x, ok := m.GetM().(*Up_Op); ok {
		return x.Op
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Up) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Up_OneofMarshaler, _Up_OneofUnmarshaler, _Up_OneofSizer, []interface{}{
		(*Up_Join)(nil),
		(*Up_Op)(nil),
	}
}

func _Up_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Up)
	// m
	switch x := m.M.(type) {
	case *Up_Join:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Join); err != nil {
			return err
		}
	case *Up_Op:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Op); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Up.M has unexpected type %T", x)
	}
	return nil
}

func _Up_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Up)
	switch tag {
	case 1: // m.join
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Up_UpJoin)
		err := b.DecodeMessage(msg)
		m.M = &Up_Join{msg}
		return true, err
	case 2: // m.op
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Up_UpOp)
		err := b.DecodeMessage(msg)
		m.M = &Up_Op{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Up_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Up)
	// m
	switch x := m.M.(type) {
	case *Up_Join:
		s := proto.Size(x.Join)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Up_Op:
		s := proto.Size(x.Op)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Up_UpJoin struct {
	Mode                 Mode     `protobuf:"varint,1,opt,name=mode,proto3,enum=comm.Mode" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Up_UpJoin) Reset()         { *m = Up_UpJoin{} }
func (m *Up_UpJoin) String() string { return proto.CompactTextString(m) }
func (*Up_UpJoin) ProtoMessage()    {}
func (*Up_UpJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_gosnake_200050d03267622b, []int{0, 0}
}
func (m *Up_UpJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Up_UpJoin.Unmarshal(m, b)
}
func (m *Up_UpJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Up_UpJoin.Marshal(b, m, deterministic)
}
func (dst *Up_UpJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Up_UpJoin.Merge(dst, src)
}
func (m *Up_UpJoin) XXX_Size() int {
	return xxx_messageInfo_Up_UpJoin.Size(m)
}
func (m *Up_UpJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_Up_UpJoin.DiscardUnknown(m)
}

var xxx_messageInfo_Up_UpJoin proto.InternalMessageInfo

func (m *Up_UpJoin) GetMode() Mode {
	if m != nil {
		return m.Mode
	}
	return Mode_Mode_None
}

type Up_UpOp struct {
	Keycode              KeyCode  `protobuf:"varint,1,opt,name=keycode,proto3,enum=comm.KeyCode" json:"keycode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Up_UpOp) Reset()         { *m = Up_UpOp{} }
func (m *Up_UpOp) String() string { return proto.CompactTextString(m) }
func (*Up_UpOp) ProtoMessage()    {}
func (*Up_UpOp) Descriptor() ([]byte, []int) {
	return fileDescriptor_gosnake_200050d03267622b, []int{0, 1}
}
func (m *Up_UpOp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Up_UpOp.Unmarshal(m, b)
}
func (m *Up_UpOp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Up_UpOp.Marshal(b, m, deterministic)
}
func (dst *Up_UpOp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Up_UpOp.Merge(dst, src)
}
func (m *Up_UpOp) XXX_Size() int {
	return xxx_messageInfo_Up_UpOp.Size(m)
}
func (m *Up_UpOp) XXX_DiscardUnknown() {
	xxx_messageInfo_Up_UpOp.DiscardUnknown(m)
}

var xxx_messageInfo_Up_UpOp proto.InternalMessageInfo

func (m *Up_UpOp) GetKeycode() KeyCode {
	if m != nil {
		return m.Keycode
	}
	return KeyCode_KeyCode_None
}

type Down struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Down) Reset()         { *m = Down{} }
func (m *Down) String() string { return proto.CompactTextString(m) }
func (*Down) ProtoMessage()    {}
func (*Down) Descriptor() ([]byte, []int) {
	return fileDescriptor_gosnake_200050d03267622b, []int{1}
}
func (m *Down) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Down.Unmarshal(m, b)
}
func (m *Down) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Down.Marshal(b, m, deterministic)
}
func (dst *Down) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Down.Merge(dst, src)
}
func (m *Down) XXX_Size() int {
	return xxx_messageInfo_Down.Size(m)
}
func (m *Down) XXX_DiscardUnknown() {
	xxx_messageInfo_Down.DiscardUnknown(m)
}

var xxx_messageInfo_Down proto.InternalMessageInfo

type Down_KickOff struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Down_KickOff) Reset()         { *m = Down_KickOff{} }
func (m *Down_KickOff) String() string { return proto.CompactTextString(m) }
func (*Down_KickOff) ProtoMessage()    {}
func (*Down_KickOff) Descriptor() ([]byte, []int) {
	return fileDescriptor_gosnake_200050d03267622b, []int{1, 0}
}
func (m *Down_KickOff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Down_KickOff.Unmarshal(m, b)
}
func (m *Down_KickOff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Down_KickOff.Marshal(b, m, deterministic)
}
func (dst *Down_KickOff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Down_KickOff.Merge(dst, src)
}
func (m *Down_KickOff) XXX_Size() int {
	return xxx_messageInfo_Down_KickOff.Size(m)
}
func (m *Down_KickOff) XXX_DiscardUnknown() {
	xxx_messageInfo_Down_KickOff.DiscardUnknown(m)
}

var xxx_messageInfo_Down_KickOff proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Up)(nil), "comm.Up")
	proto.RegisterType((*Up_UpJoin)(nil), "comm.Up.UpJoin")
	proto.RegisterType((*Up_UpOp)(nil), "comm.Up.UpOp")
	proto.RegisterType((*Down)(nil), "comm.Down")
	proto.RegisterType((*Down_KickOff)(nil), "comm.Down.KickOff")
	proto.RegisterEnum("comm.Mode", Mode_name, Mode_value)
	proto.RegisterEnum("comm.KeyCode", KeyCode_name, KeyCode_value)
}

func init() { proto.RegisterFile("gosnake.proto", fileDescriptor_gosnake_200050d03267622b) }

var fileDescriptor_gosnake_200050d03267622b = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xd1, 0x4e, 0xfa, 0x30,
	0x14, 0xc6, 0xe9, 0x68, 0x58, 0x38, 0xfc, 0xf7, 0xb7, 0x54, 0x8d, 0xc8, 0x85, 0x1a, 0x12, 0x23,
	0x21, 0x71, 0x44, 0xb8, 0xf5, 0x0a, 0x51, 0x51, 0x94, 0x2d, 0x0b, 0x8b, 0x89, 0x37, 0x46, 0x47,
	0x31, 0x73, 0xd9, 0x4e, 0x33, 0x88, 0x86, 0x77, 0xf2, 0xd1, 0x7c, 0x07, 0x4d, 0xcb, 0xc6, 0xe8,
	0x4d, 0xfb, 0x9d, 0xdf, 0x77, 0xbe, 0xe6, 0xe4, 0x80, 0xf5, 0x8e, 0x8b, 0xe4, 0x35, 0x12, 0xb6,
	0x4c, 0x71, 0x89, 0x9c, 0x06, 0x18, 0xc7, 0xad, 0x6f, 0x02, 0x86, 0x2f, 0xf9, 0x29, 0xd0, 0x0f,
	0x0c, 0x93, 0x06, 0x39, 0x21, 0xed, 0x5a, 0x6f, 0xc7, 0x56, 0xcc, 0xf6, 0xa5, 0xed, 0xcb, 0x7b,
	0x0c, 0x93, 0x51, 0xc9, 0xd3, 0x98, 0x1f, 0x83, 0x81, 0xb2, 0x61, 0x68, 0x93, 0xb5, 0x65, 0x72,
	0xe4, 0xa8, 0xe4, 0x19, 0x28, 0x9b, 0x6d, 0xa8, 0xac, 0x5b, 0xf8, 0x11, 0xd0, 0x18, 0x67, 0x42,
	0x27, 0xfe, 0xef, 0xc1, 0xda, 0xfc, 0x88, 0x33, 0xe1, 0xe9, 0x7a, 0xb3, 0x0b, 0x54, 0xf5, 0xf1,
	0x33, 0x30, 0x23, 0xb1, 0x0a, 0x0a, 0x6b, 0x96, 0x3b, 0x16, 0xab, 0x2b, 0xe5, 0xce, 0xe9, 0xa0,
	0x0c, 0x24, 0x6e, 0xd5, 0x81, 0x0e, 0xf1, 0x2b, 0x69, 0x56, 0xc1, 0x1c, 0x87, 0x41, 0xe4, 0xcc,
	0xe7, 0x9d, 0x4b, 0xa0, 0x2a, 0x96, 0x5b, 0x50, 0x55, 0xf7, 0xcb, 0x04, 0x13, 0xc1, 0x4a, 0xbc,
	0x06, 0xa6, 0x96, 0x17, 0x2e, 0x23, 0x1b, 0xd1, 0x73, 0x99, 0xb1, 0x11, 0x7d, 0x97, 0x95, 0x3b,
	0x4b, 0x30, 0xb3, 0x9f, 0x38, 0x83, 0x7f, 0xd9, 0x33, 0xcf, 0x38, 0x2c, 0x2a, 0x0f, 0xd7, 0x37,
	0x53, 0xf6, 0x9b, 0x1f, 0xc2, 0x0f, 0x00, 0x72, 0xe4, 0xbb, 0xec, 0xa7, 0x00, 0x75, 0xb0, 0x72,
	0xe0, 0xdd, 0xdd, 0x8e, 0xa6, 0x8c, 0x6c, 0x07, 0x0f, 0x9d, 0xa7, 0x09, 0xdb, 0x1b, 0xec, 0x3f,
	0xef, 0x66, 0xcb, 0x38, 0x5f, 0x88, 0xf4, 0x53, 0xa4, 0x5d, 0x35, 0xf3, 0x5b, 0x45, 0x6f, 0xa6,
	0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xb7, 0xfd, 0xec, 0xaa, 0x01, 0x00, 0x00,
}
